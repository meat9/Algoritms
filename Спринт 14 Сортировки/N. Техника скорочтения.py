# Евлампия решила научится технике скорочтения, чтобы успевать читать все выпуски 
# любимых журналов. 
# Она узнала, что в основе многих техник, позволяющий быстро читать, лежит идея 
# просматривать текст по диагонали. 
# Евлампия решила, что если будет чаще иметь дело с данными, которые упорядочены по 
# диагонали, быстрее освоит технику скорочтения.
# В своем дневнике она хранит зашифрованные в виде числовых матриц записи. 
# Нужно отсортировать матрицы по диагонали. 

# Формат ввода
# В первой строке записано n - число строк в матрице. 
# Во второй строке записано m - число столбцов матрицы.
# n и m не превосходят 1000. 
# В следующих n строках записано по m неотрицательных целых чисел, 
# каждое из которых не больше 1000.

# Формат вывода
# Нужно в таком же формате вывести матрицу, отсортированную по диагонали.

# Пример 1
# Ввод	
# 3
# 4
# 3 3 1 1
# 2 2 1 2
# 1 1 1 2
# Вывод
# 1 1 1 1
# 1 2 2 2
# 1 2 3 3

with open('input.txt') as f:
    rows = int(f.readline())
    columns = int(f.readline())
    mat = []
    for i in range(rows):
        mat.append(list(map(int, f.readline().split())))



def diagonalSort(mat):
    m = len(mat)
    n = len(mat[0])
    
    for i in range(m):
        l = [mat[i+j][j] for j in range(min(m - i, n))]
        l.sort()
        for j in range(min(m - i, n)):
            mat[i+j][j] = l[j]
            
    for i in range(1, n):
        l = [mat[j][i+j] for j in range(min(m, n - i))]
        l.sort()
        for j in range(min(m, n - i)):
            mat[j][i+j] = l[j]
            
    for row in mat: 
        print(*row) 

diagonalSort(mat)