# Дана матрица. Нужно написать функцию, которая для элемента возвращает всех его соседей. 
# Соседним считается элемент, находящийся от текущего на одну ячейку влево, вправо, вверх 
# или вниз. Диагональные элементы соседними не считаются.

# Например, в матрице A:
# 1 2 3
# 0 2 6
# 7 4 1
# 2 7 0
# соседними элементами для (0, 0) будут 2 и 0 А для (2, 1) — 1, 2, 7, 7.

# Формат ввода
# В первой строке задано n - количество строк матрицы. Во втрой - m - количество столбцов. 
# Числа m и n не превосходят 1000. В следующих n строках задана матрица. 
# Элементы матрицы - целые числа, по модулю не превосходящие 1000. 
# В последних двух строках записаны координаты элемента (индексация начинается с нуля), 
# соседей которого нужно найти.

# Формат вывода
# Напечатайте нужные числа в возрастающем порядке через пробел.

# Пример 1
# Ввод	
# 4
# 3
# 1 2 3
# 0 2 6
# 7 4 1
# 2 7 0
# 3
# 0
# Вывод
# 7 7

input_data = []
with open('input.txt') as fp:
    line = fp.readline().strip()
    while line:
        input_data.append(line)
        line = fp.readline().strip()
rows, columns, ir, ic = int(input_data[0]), int(input_data[1]), int(input_data[-2]), int(input_data[-1])
lines = input_data[2:2+int(rows)]
matrix = list(map(lambda x: list(x.split(' ')), lines))
res = []
if ir + 1 < rows:
    res.append(int(matrix[ir + 1][ic]))
if ir - 1 >= 0:
    res.append(int(matrix[ir - 1][ic]))
if ic + 1 < columns:
    res.append(int(matrix[ir][ic + 1]))
if ic - 1 >= 0:
    res.append(int(matrix[ir][ic - 1]))
print(' '.join(map(lambda x: str(x), sorted(res))))